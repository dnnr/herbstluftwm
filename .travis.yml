language: minimal
dist: xenial
services: docker


before_install:
    # Delete .git/ to maximize ccache effectiveness (no version string mismatches)
    - rm -rf .git

jobs:
    include:
        - name: "Build with most recent GCC & Clang, run checks and tests"
          cache:
              directories:
                  - $HOME/.ccache-clang-7
                  - $HOME/.ccache-gcc-8
                  - $HOME/.tox-cache
          script:
              # Prepare Docker image with bleeding edge Ubuntu 19.04 (disco)
              - docker pull dnnr/hlwm-ci:disco
              - docker build -t disco --cache-from dnnr/hlwm-ci:disco - <Dockerfile.ci-disco

              # Run builds and tests in Docker container
              - docker run -u $UID --privileged -t --rm
                --volume=/etc/passwd:/etc/passwd:ro
                --volume=$HOME/.ccache-gcc-8:$HOME/.ccache-gcc-8:rw
                --volume=$HOME/.ccache-clang-7:$HOME/.ccache-clang-7:rw
                --volume=$PWD:/hlwm:rw
                --volume=$HOME/.tox-cache:/hlwm/.tox:rw
                disco
                sh -c '
                CCACHE_DIR=$HOME/.ccache-clang-7 /hlwm/ci-build.py --cxx=clang++-7 --cc=clang-7 --build-type=Release --ccache
                &&
                CCACHE_DIR=$HOME/.ccache-gcc-8 /hlwm/ci-build.py --check-using-std --cxx=g++-8 --cc=gcc-8 --build-type=Release --ccache --run-tests
                '


        - name: "Build with ancient GCC on Ubuntu 14.04"
          cache:
              directories:
                  - $HOME/.ccache-gcc-4.8
          script:
              # Prepare Docker image with Ubuntu 14.04 (trusty)
              - docker pull dnnr/hlwm-ci:trusty
              - docker build -t trusty --cache-from dnnr/hlwm-ci:trusty - <Dockerfile.ci-trusty

              # Build with gcc-4.8 (plain bash one-liner because Python is too old)
              - docker run -u $UID -t --rm
                --volume=$PWD:/hlwm:rw
                --volume=$HOME/.ccache-gcc-4.8:/.ccache:rw
                --env CC=gcc-4.8
                --env CXX=g++-4.8
                trusty
                bash -c 'cd /tmp; ccache -z --max-size=500M;
                cmake -GNinja -DWITH_DOCUMENTATION=NO -DENABLE_CCACHE=YES /hlwm
                && time ninja -v -k10;
                ccache -s'
