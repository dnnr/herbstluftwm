language: minimal

cache:
    directories:
        - $HOME/.ccache-clang-7
        - $HOME/.ccache-gcc-8

jobs:
    include:
        - name: "Ubuntu 19.04, gcc-8, Debug build, run checks and tests"
          dist: xenial
          services: docker
          script:
              - cat $HOME/.ccache/ccache.conf
              - ccache -s
              - docker pull dnnr/hlwm-ci:disco
              - docker build -t disco --cache-from dnnr/hlwm-ci:disco - <Dockerfile.ci-disco
              - docker run -u $UID --privileged -t --rm
                --volume=/etc/passwd:/etc/passwd:ro
                --volume=$HOME/.ccache-gcc-8:$HOME/.ccache:rw
                --volume=$PWD:/hlwm:rw
                disco
                /hlwm/ci-build.py --check-using-std --cxx=g++-8 --cc=gcc-8 --build-type=Release --ccache --run-tests
              - ccache -s

        - name: "Ubuntu 19.04, clang-7, Debug build"
          dist: xenial
          services: docker
          script:
              - docker pull dnnr/hlwm-ci:disco
              - docker build -t disco --cache-from dnnr/hlwm-ci:disco - <Dockerfile.ci-disco
              - docker run -u $UID -t --rm
                --volume=$PWD:/hlwm:rw
                --volume=$HOME/.ccache-clang-7:/.ccache:rw
                disco
                /hlwm/ci-build.py --cxx=clang++-7 --cc=clang-7 --build-type=Release --ccache

    exclude:
        - name: "Ubuntu 14.04, gcc-4.8, Release build"
          dist: xenial
          services: docker
          script:
              - docker pull dnnr/hlwm-ci:trusty
              - docker build -t trusty --cache-from dnnr/hlwm-ci:trusty - <Dockerfile.ci-trusty
              - docker run -u $UID -t --rm --volume=$PWD:/hlwm:rw trusty bash -c 'mkdir /hlwm/build && cd /hlwm/build && cmake -GNinja .. && ninja -v -k10'
