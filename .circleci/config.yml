version: 2

steps_template: &steps_template
    steps:
        - checkout
        - run:
            name: "Misc. preparations"
            command: |
                # Provide CXX in a file so that in can be included in the cache key:
                echo ${CXX} > CXX
                # Delete .git to maximize ccache effectiveness (no version string mismatches)
                rm -rf .git
        - restore_cache:
            keys:
                - ccache-{{ checksum "CXX" }}-{{ .Branch }}-{{ .Revision }}
                - ccache-{{ checksum "CXX" }}-{{ .Branch }}
                - ccache-{{ checksum "CXX" }}-
                - tox-{{ .Branch }}-{{ .Revision }}
                - tox-{{ .Branch }}
                - tox-
        - run:
            when: always
            name: "Print ccache stats (before)"
            command: |
                # Set reasonable ccache limits:
                ccache --max-files=0 --max-size=500M
                ccache -s
                ccache -z
        - run:
            command: |
                [[ -d build ]] || mkdir build
                cd build
                cmake -GNinja -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DENABLE_CCACHE=YES ..
                ninja -v -k1 ${NINJA_ARGS} herbstclient herbstluftwm
                ${RUN_TOX} && tox -e py37 -- -n auto -x -k test_close
        - run:
            when: always
            name: "Print ccache stats (after)"
            command: ccache -s
        - save_cache:
            name: "Save ccache"
            when: always
            key: ccache-{{ checksum "CXX" }}-{{ .Branch }}-{{ .Revision }}
            paths:
                - ~/.ccache
        - save_cache:
            name: "Save tox cache"
            when: on_success
            key: tox-{{ .Branch }}-{{ .Revision }}
            paths:
                - build/.tox

jobs:
    build-disco-clang-7:
        docker:
            - image: dnnr/hlwm-ci:disco
        environment:
            CC: clang-7
            CXX: clang++-7
            BUILD_TYPE: Debug
            RUN_TOX: true
        <<: *steps_template

    build-disco-gcc-8:
        docker:
            - image: dnnr/hlwm-ci:disco
        environment:
            CC: gcc-8
            CXX: g++-8
            BUILD_TYPE: Debug
            NINJA_ARGS: -j1
            RUN_TOX: false
        <<: *steps_template

    build-trusty-gcc-4.8:
        docker:
            - image: dnnr/hlwm-ci:trusty
        environment:
            CC: gcc-4.8
            CXX: g++-4.8
            BUILD_TYPE: Release
            RUN_TOX: false
        <<: *steps_template

    iwyu:
        docker:
            - image: dnnr/hlwm-ci:disco
        steps:
            - checkout
            - run: ./iwyu.sh

workflows:
    version: 2
    ci_checks:
        jobs:
            - build-disco-clang-7
            # - build-disco-gcc-8
            # - build-trusty-gcc-4.8
            # - iwyu
            # - test
            # - publish coverage
