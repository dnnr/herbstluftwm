version: 2.1

executors:
    disco:
        docker:
            - image: hlwm/ci:disco
    trusty:
        docker:
            - image: hlwm/ci:trusty

commands:
    build:
        parameters:
            cc:
                type: string
            cxx:
                type: string
            ci_build_args:
                type: string
                default: ""
        steps:
            - restore_cache:
                name: "Restore ccache for << parameters.cc >>"
                keys:
                    - ccache-<< parameters.cxx >>-{{ .Branch }}-{{ .Revision }}
                    - ccache-<< parameters.cxx >>-{{ .Branch }}
                    - ccache-<< parameters.cxx >>-
            - run:
                name: "Build with << parameters.cc >>"
                command: |
                    ./ci-build.py \
                    --cxx=<< parameters.cxx >> --cc=<< parameters.cc >> \
                    --ccache \
                    << parameters.ci_build_args >>
            - save_cache:
                name: "Save ccache for << parameters.cc >>"
                when: always
                key: ccache-<< parameters.cxx >>-{{ .Branch }}-{{ .Revision }}
                paths:
                    - ~/.ccache
    test:
        parameters:
            builddir:
                type: string
        steps:
            - restore_cache:
                name: "Restore tox cache"
                keys:
                    - tox-{{ .Branch }}-{{ .Revision }}
                    - tox-{{ .Branch }}
                    - tox-
            - run:
                name: "Run tests"
                command: |
                    cd << parameters.builddir >>
                    ${RUN_TOX} && tox -e py37 -- -n auto -v -x --junitxml=test-results/tox/results.xml
            - store_test_results:
                path: test-results
            - save_cache:
                name: "Save tox cache"
                when: on_success
                key: tox-{{ .Branch }}-{{ .Revision }}
                paths:
                    - .tox

jobs:
    build-and-test-on-disco:
        executor: disco
        steps:
            - checkout
            - run:
                name: "Misc. preparations"
                command: |
                    # Delete .git/ to maximize ccache effectiveness (no version string mismatches)
                    rm -rf .git
            - build:
                cc: gcc-8
                cxx: g++-8
                # Using -j2 here because GCC-8 consumes too much RAM for
                # unlimited parallelism:
                ci_build_args: '--build-type=Debug --ninja-args=-j2 --iwyu'
            - build:
                cc: clang-7
                cxx: clang++-7
                ci_build_args: '--build-type=Debug'
            # - test:
                # builddir: build-clang-7
              # TODO: publish coverage

    build-on-trusty:
        executor: trusty
        steps:
            - checkout

workflows:
    version: 2
    ci_checks:
        jobs:
            - build-and-test-on-disco
            # - build-on-trusty
